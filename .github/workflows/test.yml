name: Test

on:
  workflow_dispatch:
  push:
    branches: ["main", "dev"]
  # pull_request:
  #   branches: ["main"]

jobs:
  laravel-tests:
    name: Laravel (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: laravel_tester
          POSTGRES_PASSWORD: laravel_tester
          POSTGRES_DB: laravel_testing_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        php-versions: ["8.3", "8.4"]

    steps:
      - uses: actions/checkout@v4

      - name: Check Postgres Connection
        env:
          DB_CONNECTION: postgresql://laravel_tester:laravel_tester@127.0.0.1:5432/laravel_testing_db
        run: |
          psql -d $DB_CONNECTION -c 'SELECT 1;'
          if [ $? -ne 0 ]; then
            echo "Error connecting to PostgreSQL"
            exit 1
          fi

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: pgsql
          # coverage: xdebug

      - name: Install Dependencies
        run: |
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
          npm install && npm run build

      - name: Init Infrastructure
        run: |
          chmod -R 777 storage bootstrap/cache
          php artisan storage:link
          php artisan config:clear
          php artisan key:generate --env=testing

      - name: Migrate Data
        run: php artisan migrate --env=testing

      - name: Execute tests
        run: php artisan test --env=testing
        # run: vendor/bin/phpunit --coverage-text
